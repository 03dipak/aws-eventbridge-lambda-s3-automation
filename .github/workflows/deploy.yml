name: Deploy AWS Infrastructure

on:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Install yamllint
        run: |
          pip install yamllint

      - name: Lint YAML files
        run: |
          yamllint .github/workflows --format=parsable

  deploy-lambdas:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        lambda: [demo-lambda-getfile-dev, demo-lambda-hello-dev]
    env:
      REGION: ${{ secrets.AWS_REGION }}
      ROLE_ARN: ${{ secrets.ROLE_ARN }}
      BUCKET_NAME: ${{ secrets.GLUE_BUCKET }}
      ENV_NAME: main
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::980921712180:role/WebConsole
          aws-region: ap-south-1
          
      - name: Who am I?
        run: aws sts get-caller-identity

      - name: Ensure S3 Bucket and Folder Structure
        run: |
          echo "üîç Checking if bucket '$BUCKET_NAME' exists..."
          if aws s3api head-bucket --bucket "$BUCKET_NAME" 2>/dev/null; then
            echo "‚úÖ Bucket exists: $BUCKET_NAME"
          else
            echo "üöÄ Creating bucket: $BUCKET_NAME"
            aws s3api create-bucket \
              --bucket "$BUCKET_NAME" \
              --region "$REGION" \
              --create-bucket-configuration \
              LocationConstraint="$REGION"
          fi

          echo "üìÅ Ensuring 'restricted-folder/data/' path exists in S3..."
          aws s3api put-object \
            --bucket "$BUCKET_NAME" \
            --key "restricted-folder/data/"
          echo "‚úÖ Folder 'restricted-folder/data/' "

      - name: Install Dependencies for ${{ matrix.lambda }}
        working-directory: lambdas/${{ matrix.lambda }}
        run: |
          pip install -r ../../requirements.txt -t .  
        
      - name: Install Deployment Dependencies
        run: |
          pip install boto3
      
      - name: Deploy Lambda Function ${{ matrix.lambda }}
        working-directory: lambdas/${{ matrix.lambda }}
        run: |
          python ../../scripts/deploy_lambda.py \
            ${{ matrix.lambda }} . ${{ secrets.ROLE_ARN }} ${{ secrets.AWS_REGION }}

  deploy-eventbridge:
    runs-on: ubuntu-latest
    needs: deploy-lambdas
    env:
      REGION: ${{ secrets.AWS_REGION }}
      ROLE_ARN: ${{ secrets.ROLE_ARN }}
      BUCKET_NAME: ${{ secrets.GLUE_BUCKET }}
      ENV_NAME: main
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::980921712180:role/WebConsole
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Who am I?
        run: aws sts get-caller-identity
        
      - name: Install Deployment Dependencies
        run: |
          pip install boto3

      - name: Deploy EventBridge Rule
        run: |
          python scripts/deploy_eventbridge.py \
            ${{ secrets.AWS_REGION }} $ENV_NAME ${{ secrets.GLUE_BUCKET }}
